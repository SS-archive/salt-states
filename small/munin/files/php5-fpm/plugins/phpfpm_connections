#!/usr/bin/perl
#
# Magic markers:
#%# family=auto
#%# capabilities=autoconf

my $ret = undef;

if (! eval "require LWP::UserAgent;")
{
	$ret = "LWP::UserAgent not found";
}

my $URL = exists $ENV{'url'} ? $ENV{'url'} : "http://127.0.0.1:%d/status";
my @PORTS = exists $ENV{'ports'} ? split(' ', $ENV{'ports'}) : (80);

if ( defined $ARGV[0] and $ARGV[0] eq "autoconf" )
{
	if ($ret)
	{
		print "no ($ret)\n";
		exit 1;
	}

	my $ua = LWP::UserAgent->new(timeout => 30);

	my @badports;
	foreach my $port (@PORTS) {
		my $url = sprintf $URL, $port;
		my $response = $ua->request(HTTP::Request->new('GET',$url));
		push @badports, $port unless $response->is_success and $response->content =~ /^accepted conn:/im;
	}
	if (@badports) {
		print "no (phpfpm-status)\n";
		exit 1;
	} else {
		print "yes\n";
		exit 0;
	}
}

if ( defined $ARGV[0] and $ARGV[0] eq "config" )
{
	print('graph_title PHP5-FPM Accepted Connections
graph_args --base 1024 -l 0
graph_vlabel Connections
graph_category PHP
graph_order Connections
graph_info Plugin created by TJ Stein
accepted.label Idle
accepted.draw AREA
accepted.type DERIVE
accepted.min 0
');

	exit 0;
}

foreach my $port (@PORTS)
{
    my $ua = LWP::UserAgent->new(timeout => 30);
    my $url = sprintf $URL, $port;
    my $response = $ua->request(HTTP::Request->new('GET',$url));
	if ($response->content =~ /accepted conn:\s+([0-9\.]+)/im) {
        print "accepted.value $1\n";
    } else {
        print "accepted.value U\n";
    }
}

# vim:syntax=perl
